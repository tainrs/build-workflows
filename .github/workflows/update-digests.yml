name: update-digests

# Triggers for the workflow: manually (workflow_dispatch) or every hour (schedule).
on:
  workflow_dispatch:
  schedule:
    - cron:  '0 * * * *'

jobs:
  do-work:
    runs-on: ubuntu-latest
    env:
      REPOSITORY_OWNER: ${{ github.repository_owner }}
      GH_ACTOR:         ${{ github.actor }}
      GH_TOKEN:         ${{ github.token }}
      PERSONAL_TOKEN:   ${{ secrets.GH_TOKEN }}
      SLACK_WEBHOOK:    ${{ secrets.SLACK_WEBHOOK }}

    steps:
      - name: Git Config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Do Work
        run: |
          while read REPOSITORY; do
            while IFS= read -r BRANCH; do
              git clone -b "${BRANCH}" "https://${PERSONAL_TOKEN}@github.com/${REPOSITORY_OWNER}/${REPOSITORY}.git"
              cd "${REPOSITORY}" || exit 1

              # Check if the repository has the update-digests.sh script
              if [[ -f update-digests.sh ]]; then
                bash ./update-digests.sh
              else
                continue
              fi

              # Add the changes to the repository.
              git add .

              # Commit the changes if there are any.
              if git commit -m "Upstream image update"; then
                # Push the changes back to the repository.
                git push "https://${PERSONAL_TOKEN}@github.com/${REPOSITORY_OWNER}/${REPOSITORY}.git"
                # Get the latest commit SHA.
                GIT_SHA=$(git log -n 1 --pretty=format:"%H")
                # Get the current timestamp.
                timestamp=$(date +%s)
                # Create a JSON payload for the Slack notification.
                json=$(jq -nc --arg title "${REPOSITORY_OWNER}/${REPOSITORY}:${BRANCH}" \
                              --arg url "https://github.com/${REPOSITORY_OWNER}/${REPOSITORY}/commit/${GIT_SHA}" \
                              --arg description "Upstream changes detected." \
                              --arg color "#36a64f" \
                              --arg timestamp "${timestamp}" \
                              '{"attachments": [
                                {
                                  "title": $title,
                                  "title_link": $url,
                                  "text": $description,
                                  "color": $color,
                                  "footer": "Powered by GitHub Actions",
                                  "ts": $timestamp
                                }
                              ]}')
                # Send the Slack notification.
                curl -fsSL -X POST -H "Content-Type: application/json" -d "${json}" "${SLACK_WEBHOOK}"
              fi

              # Go to the parent directory and remove the cloned repository.
              cd .. || exit 1
              rm -rf "${REPOSITORY}"
            done < <(curl -u "${GH_ACTOR}:${GH_TOKEN}" -fsSL "https://api.github.com/repos/${REPOSITORY_OWNER}/${REPOSITORY}/branches" | jq -re --arg branch_filter "${BRANCH_FILTER}" '.[] | select(.name!="main") | select(.name|test("\($branch_filter)")) | select(.name | test("^update-") | not) | .name')
          done < <(curl -u "${GH_ACTOR}:${GH_TOKEN}" -fsSL "https://api.github.com/users/${REPOSITORY_OWNER}/repos?per_page=1000" | jq -re '.[] | select(.topics[]=="docker-image") | .name')
